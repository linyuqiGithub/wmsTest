<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com._520it.wms.mapper.SaleAccountMapper" >
    <cache type="org.mybatis.caches.ehcache.EhcacheCache"/>
  <resultMap id="BaseResultMap" type="com._520it.wms.domain.SaleAccount" >
    <id column="id" property="id"  />
	<result column="costAmount" property="costAmount"  />
	<result column="costPrice" property="costPrice"  />
	<result column="saleAmount" property="saleAmount"  />
	<result column="vdate" property="vdate"  />
	<result column="salePrice" property="salePrice"  />
      <result column="number" property="number"/>
      <!--关联对象使用assiciation标签进生成,以下使用了发送额外sql的方法-->
      <association property="product" column="product_id" select="com._520it.wms.mapper.ProductMapper.get"/>
      <association property="saleMan" column="depot_id" select="com._520it.wms.mapper.EmployeeMapper.get"/>
      <association property="client" column="client_id" select="com._520it.wms.mapper.ClientMapper.get"/>
  </resultMap>
  <delete id="delete" parameterType="long" >
    delete from saleAccount where id = #{id}
  </delete>
  <insert id="save" parameterType="com._520it.wms.domain.SaleAccount" useGeneratedKeys="true" keyProperty="id" >
    insert into saleAccount 
    (costAmount,product_id,costPrice,saleAmount,saleMan_id,vdate,number,salePrice,client_id)
    values 
    (#{costAmount},#{product.id},#{costPrice},#{saleAmount},#{saleMan.id},#{vdate},#{number},#{salePrice},#{client.id})
  </insert>
  <update id="update" parameterType="com._520it.wms.domain.SaleAccount" >
    update saleAccount
    set
	    costAmount=#{costAmount},
	    product_id=#{product.id},
	    costPrice=#{costPrice},
	    saleAmount=#{saleAmount},
	    saleMan_id=#{saleMan.id},
	    vdate=#{vdate},
	    number=#{number},
	    salePrice=#{salePrice},
	    client_id=#{client.id}
    where id = #{id}
  </update>
  <select id="get" resultMap="BaseResultMap" parameterType="long" >
    select * from saleAccount where id = #{id}
  </select>
  <select id="listAll" resultMap="BaseResultMap" >
    select * from saleAccount
  </select>
  <sql id="conditionSql">
  	<where>
  	</where>
  </sql>
  <select id="queryByConditionCount" resultType="long">
  	select count(*) from saleAccount
  	<include refid="conditionSql"/>
  </select>
  <select id="queryByCondition" resultMap="BaseResultMap">
  	select * from saleAccount
  	<include refid="conditionSql"/>
  	limit #{start},#{pageSize}
  </select>
</mapper>